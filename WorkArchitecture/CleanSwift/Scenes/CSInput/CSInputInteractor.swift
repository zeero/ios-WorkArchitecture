//
//  CSInputInteractor.swift
//  WorkArchitecture
//
//  Created by zeero on 2020/01/31.
//  Copyright (c) 2020 zeero. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import Foundation

protocol CSInputBusinessLogic {
    func validateColorCode(request: CSInput.ValidateColorCode.Request)
}

protocol CSInputDataStore {
    var fg: String { get set }
    var bg: String { get set }
}

class CSInputInteractor: CSInputBusinessLogic, CSInputDataStore {
    
    var presenter: CSInputPresentationLogic?
    var worker: CSInputWorker?
    
    var fg: String = ""
    var bg: String = ""
    
    // MARK: Do something
    
    func validateColorCode(request: CSInput.ValidateColorCode.Request) {
        let validator = CSColorCodeValidateWorker()
        fg = request.fg
        bg = request.bg
        let isValidFg = validator.validate(target: fg)
        let isValidBg = validator.validate(target: bg)
        let response = CSInput.ValidateColorCode.Response(isValidFg: isValidFg, isValidBg: isValidBg)
        presenter?.presentResult(response: response)
    }
}
