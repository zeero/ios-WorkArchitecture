//
//  CSInputPresenter.swift
//  WorkArchitecture
//
//  Created by zeero on 2020/01/31.
//  Copyright (c) 2020 zeero. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CSInputPresentationLogic {
    func presentResult(response: CSInput.ValidateColorCode.Response)
}

class CSInputPresenter: CSInputPresentationLogic {
    
    weak var viewController: CSInputDisplayLogic?
    
    // MARK: Do something
    
    func presentResult(response: CSInput.ValidateColorCode.Response) {
        if response.isValidFg && response.isValidBg {
            viewController?.displayResult()
        } else {
            let handler: (UIAlertAction) -> Void = { [weak self] _ in
                guard let weakself = self else { return }
                let fgColor = weakself.getBackgroundColor(isValid: response.isValidFg)
                let bgColor = weakself.getBackgroundColor(isValid: response.isValidBg)
                let viewModel = CSInput.ValidateColorCode.ViewModel(fgBackgroundColor: fgColor, bgBackgroundColor: bgColor)
                weakself.viewController?.displayInvalid(viewModel: viewModel)
            }
            viewController?.showAlert(message: "不正な入力です", handler: handler)
        }
    }
    
    private func getBackgroundColor(isValid: Bool) -> UIColor {
        return isValid ? .white : .red
    }
}
