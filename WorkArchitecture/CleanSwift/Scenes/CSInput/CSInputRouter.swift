//
//  CSInputRouter.swift
//  WorkArchitecture
//
//  Created by zeero on 2020/01/31.
//  Copyright (c) 2020 zeero. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol CSInputRoutingLogic {
    func routeToCSResult(segue: UIStoryboardSegue?)
}

protocol CSInputDataPassing {
    var dataStore: CSInputDataStore? { get }
}

class CSInputRouter: NSObject, CSInputRoutingLogic, CSInputDataPassing {
    
    weak var viewController: CSInputViewController?
    var dataStore: CSInputDataStore?
    
    // MARK: Routing
    
    func routeToCSResult(segue: UIStoryboardSegue?) {
        if let segue = segue {
            let destinationVC = segue.destination as! CSResultViewController
            var destinationDS = destinationVC.router!.dataStore!
            passDataToCSResult(source: dataStore!, destination: &destinationDS)
        } else {
            let storyboard = UIStoryboard(name: "CSMain", bundle: nil)
            let destinationVC = storyboard.instantiateViewController(withIdentifier: "CSResultViewController") as! CSResultViewController
            var destinationDS = destinationVC.router!.dataStore!
            passDataToCSResult(source: dataStore!, destination: &destinationDS)
            navigateToCSResult(source: viewController!, destination: destinationVC)
        }
    }

    // MARK: Navigation
    
    func navigateToCSResult(source: CSInputViewController, destination: CSResultViewController) {
        source.show(destination, sender: nil)
    }
    
    // MARK: Passing data
    
    func passDataToCSResult(source: CSInputDataStore, destination: inout CSResultDataStore) {
        destination.fg = source.fg
        destination.bg = source.bg
    }
}
