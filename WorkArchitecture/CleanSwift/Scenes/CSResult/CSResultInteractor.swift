//
//  CSResultInteractor.swift
//  WorkArchitecture
//
//  Created by zeero on 2020/02/03.
//  Copyright (c) 2020 zeero. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import Foundation

protocol CSResultBusinessLogic {
    func contrastCheck(request: CSResult.ContrastCheck.Request)
}

protocol CSResultDataStore {
    var fg: String { get set }
    var bg: String { get set }
}

class CSResultInteractor: CSResultBusinessLogic, CSResultDataStore {
    
    var presenter: CSResultPresentationLogic?
    var worker: CSResultWorker?
    
    var fg: String = ""
    var bg: String = ""
    
    // MARK: Do something
    
    func contrastCheck(request: CSResult.ContrastCheck.Request) {
        let worker = CSContrastCheckWorker()
        let workerRequest = CSContrastCheck.GetResult.Request(fg: request.fg, bg: request.bg)
        worker.getResult(input: workerRequest) { [weak self] result in
            let response: CSResult.ContrastCheck.Response?
            if let result = result {
                response = CSResult.ContrastCheck.Response(ratio: result.ratio)
            } else {
                response = nil
            }
            self?.presenter?.presentResult(response: response)
        }
    }
}
